name: Docker Build

on:
  schedule:
    - cron: "0 7 * * 1"
  push:
    branches: master

env:
  image: gabe565/ascii-telnet-rust

jobs:
  build:
    name: "Build Image: ${{ matrix.platform }}"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            platform: linux/amd64
          - target: armv7-unknown-linux-musleabihf
            platform: linux/arm/v7
          - target: aarch64-unknown-linux-musl
            platform: linux/arm64/v8
    steps:
      - uses: actions/checkout@v2

      - name: Cargo cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-${{ matrix.target }}-

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target=${{ matrix.target }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          pull: true
          push: true
          context: target/${{ matrix.target }}/release
          file: Dockerfile.ci
          platforms: ${{ matrix.platform }}
          tags: |
            ${{ env.image }}:${{ matrix.target }}

  manifest:
    name: Build Manifest
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create manifest
        env:
          IMAGE: ${{ env.image }}
        run: |
          for manifest in latest "${GITHUB_SHA:0:7}"; do
            docker manifest create "$IMAGE:$manifest" \
             "$IMAGE:x86_64-unknown-linux-musl" \
             "$IMAGE:armv7-unknown-linux-musleabihf" \
             "$IMAGE:aarch64-unknown-linux-musl"
            docker manifest push "$IMAGE:$manifest"
          done

  readme:
    name: Update DockerHub Description
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: peter-evans/dockerhub-description@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          repository: ${{ env.image }}
